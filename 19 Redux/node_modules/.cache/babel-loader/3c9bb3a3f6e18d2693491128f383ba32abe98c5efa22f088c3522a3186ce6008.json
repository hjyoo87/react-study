{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\n\n// const counterReducer = (state = initialState, action) => {\n//     if(action.type === 'increment') {\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter\n//         };\n//     }\n//     if(action.type === 'increase') {\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter\n//         };\n//     }\n\n//     if(action.type === 'decrement') {\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         };\n//     }\n\n//     if(action.type === 'toggle'){\n//         return {\n//             counter: state.counter,\n//             showCounter: !state.showCounter,\n//         }\n//     }\n\n//     return state;\n// };\n\nconst initialAuthState = {\n  isAuth: false\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuth = true;\n    },\n    logout(state) {\n      state.isAuth = false;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const authActions = authSlice.actions;\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","initialAuthState","isAuth","authSlice","name","initialState","reducers","login","state","logout","store","reducer","counter","counterSlice","auth","authActions","actions","counterActions"],"sources":["C:/Users/nc47/OneDrive/문서/project/react/study/19 Redux/src/store/index.js"],"sourcesContent":["import { configureStore, createSlice,  } from '@reduxjs/toolkit';\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n//     if(action.type === 'increment') {\r\n//         return {\r\n//             counter: state.counter + 1,\r\n//             showCounter: state.showCounter\r\n//         };\r\n//     }\r\n//     if(action.type === 'increase') {\r\n//         return {\r\n//             counter: state.counter + action.amount,\r\n//             showCounter: state.showCounter\r\n//         };\r\n//     }\r\n\r\n//     if(action.type === 'decrement') {\r\n//         return {\r\n//             counter: state.counter - 1,\r\n//             showCounter: state.showCounter\r\n//         };\r\n//     }\r\n\r\n//     if(action.type === 'toggle'){\r\n//         return {\r\n//             counter: state.counter,\r\n//             showCounter: !state.showCounter,\r\n//         }\r\n//     }\r\n\r\n//     return state;\r\n// };\r\n\r\nconst initialAuthState = {\r\n    isAuth: false\r\n}\r\nconst authSlice = createSlice({\r\n    name: 'authentication',\r\n    initialState: initialAuthState,\r\n    reducers: {\r\n        login(state) {\r\n            state.isAuth = true;\r\n        },\r\n        logout(state) {\r\n            state.isAuth = false;\r\n        }\r\n    }\r\n});\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        counter: counterSlice.reducer,\r\n        auth: authSlice.reducer\r\n    },\r\n});\r\n\r\nexport const authActions = authSlice.actions;\r\nexport const counterActions = counterSlice.actions;\r\nexport default store;"],"mappings":"AAAA,SAASA,cAAc,EAAEC,WAAW,QAAU,kBAAkB;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAMC,gBAAgB,GAAG;EACrBC,MAAM,EAAE;AACZ,CAAC;AACD,MAAMC,SAAS,GAAGH,WAAW,CAAC;EAC1BI,IAAI,EAAE,gBAAgB;EACtBC,YAAY,EAAEJ,gBAAgB;EAC9BK,QAAQ,EAAE;IACNC,KAAKA,CAACC,KAAK,EAAE;MACTA,KAAK,CAACN,MAAM,GAAG,IAAI;IACvB,CAAC;IACDO,MAAMA,CAACD,KAAK,EAAE;MACVA,KAAK,CAACN,MAAM,GAAG,KAAK;IACxB;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMQ,KAAK,GAAGX,cAAc,CAAC;EACzBY,OAAO,EAAE;IACLC,OAAO,EAAEC,YAAY,CAACF,OAAO;IAC7BG,IAAI,EAAEX,SAAS,CAACQ;EACpB;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMI,WAAW,GAAGZ,SAAS,CAACa,OAAO;AAC5C,OAAO,MAAMC,cAAc,GAAGJ,YAAY,CAACG,OAAO;AAClD,eAAeN,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}