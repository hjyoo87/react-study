{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n// const counterReducer = (state = initialState, action) => {\n//     if(action.type === 'increment') {\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter\n//         };\n//     }\n//     if(action.type === 'increase') {\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter\n//         };\n//     }\n\n//     if(action.type === 'decrement') {\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         };\n//     }\n\n//     if(action.type === 'toggle'){\n//         return {\n//             counter: state.counter,\n//             showCounter: !state.showCounter,\n//         }\n//     }\n\n//     return state;\n// };\n\n// const initialAuthState = {\n//     isAuth: false\n// }\n// const authSlice = createSlice({\n//     name: 'authentication',\n//     initialState: initialAuthState,\n//     reducers: {\n//         login(state) {\n//             state.isAuth = true;\n//         },\n//         logout(state) {\n//             state.isAuth = false;\n//         }\n//     }\n// });\n\nconst store = configureStore({\n  // reducer: {\n  //     counter: counterSlice.reducer,\n  //     auth: authSlice.reducer\n  // }\n  reducer: counterSlice.reducer\n});\n\n// export const authActions = authSlice.actions;\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","initialCounterState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","payload","toggleCounter","store","reducer","counterActions","actions"],"sources":["C:/Users/nc47/OneDrive/문서/project/react/study/19 Redux/src/store/index.js"],"sourcesContent":["import { configureStore, createSlice,  } from '@reduxjs/toolkit';\r\n\r\nconst initialCounterState = { counter: 0, showCounter: true };\r\n\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialCounterState,\r\n    reducers: {\r\n        increment(state) {\r\n            state.counter++;\r\n        },\r\n        decrement(state) {\r\n            state.counter--;\r\n        },\r\n        increase(state, action) {\r\n            state.counter = state.counter + action.payload;\r\n        },\r\n        toggleCounter(state) {\r\n            state.showCounter = !state.showCounter;\r\n        }\r\n    }\r\n});\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n//     if(action.type === 'increment') {\r\n//         return {\r\n//             counter: state.counter + 1,\r\n//             showCounter: state.showCounter\r\n//         };\r\n//     }\r\n//     if(action.type === 'increase') {\r\n//         return {\r\n//             counter: state.counter + action.amount,\r\n//             showCounter: state.showCounter\r\n//         };\r\n//     }\r\n\r\n//     if(action.type === 'decrement') {\r\n//         return {\r\n//             counter: state.counter - 1,\r\n//             showCounter: state.showCounter\r\n//         };\r\n//     }\r\n\r\n//     if(action.type === 'toggle'){\r\n//         return {\r\n//             counter: state.counter,\r\n//             showCounter: !state.showCounter,\r\n//         }\r\n//     }\r\n\r\n//     return state;\r\n// };\r\n\r\n// const initialAuthState = {\r\n//     isAuth: false\r\n// }\r\n// const authSlice = createSlice({\r\n//     name: 'authentication',\r\n//     initialState: initialAuthState,\r\n//     reducers: {\r\n//         login(state) {\r\n//             state.isAuth = true;\r\n//         },\r\n//         logout(state) {\r\n//             state.isAuth = false;\r\n//         }\r\n//     }\r\n// });\r\n\r\nconst store = configureStore({\r\n    // reducer: {\r\n    //     counter: counterSlice.reducer,\r\n    //     auth: authSlice.reducer\r\n    // }\r\n    reducer: counterSlice.reducer\r\n});\r\n\r\n// export const authActions = authSlice.actions;\r\nexport const counterActions = counterSlice.actions;\r\nexport default store;"],"mappings":"AAAA,SAASA,cAAc,EAAEC,WAAW,QAAU,kBAAkB;AAEhE,MAAMC,mBAAmB,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAE7D,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,SAAS;EACfJ,mBAAmB;EACnBK,QAAQ,EAAE;IACNC,SAASA,CAACC,KAAK,EAAE;MACbA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDO,SAASA,CAACD,KAAK,EAAE;MACbA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDQ,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACpBH,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,OAAO;IAClD,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MACjBA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IAC1C;EACJ;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMW,KAAK,GAAGf,cAAc,CAAC;EACzB;EACA;EACA;EACA;EACAgB,OAAO,EAAEX,YAAY,CAACW;AAC1B,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,cAAc,GAAGZ,YAAY,CAACa,OAAO;AAClD,eAAeH,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}