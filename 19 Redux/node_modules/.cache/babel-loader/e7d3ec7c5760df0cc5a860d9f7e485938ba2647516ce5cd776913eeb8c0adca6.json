{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  value: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter.value++;\n    },\n    decrement(state) {\n      state.counter.value--;\n    },\n    increase(state, action) {\n      state.counter.value = state.counter.value + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n// const counterReducer = (state = initialState, action) => {\n//     if(action.type === 'increment') {\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter\n//         };\n//     }\n//     if(action.type === 'increase') {\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter\n//         };\n//     }\n\n//     if(action.type === 'decrement') {\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         };\n//     }\n\n//     if(action.type === 'toggle'){\n//         return {\n//             counter: state.counter,\n//             showCounter: !state.showCounter,\n//         }\n//     }\n\n//     return state;\n// };\n\nconst initialAuthState = {\n  isAuth: false\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuth = true;\n    },\n    logout(state) {\n      state.isAuth = false;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","initialCounterState","value","showCounter","counterSlice","name","reducers","increment","state","counter","decrement","increase","action","payload","toggleCounter","initialAuthState","isAuth","authSlice","initialState","login","logout","store","reducer","auth","counterActions","actions","authActions"],"sources":["C:/Users/nc47/OneDrive/문서/project/react/study/19 Redux/src/store/index.js"],"sourcesContent":["import { configureStore, createSlice,  } from '@reduxjs/toolkit';\r\n\r\nconst initialCounterState = { value: 0, showCounter: true };\r\n\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialCounterState,\r\n    reducers: {\r\n        increment(state) {\r\n            state.counter.value++;\r\n        },\r\n        decrement(state) {\r\n            state.counter.value--;\r\n        },\r\n        increase(state, action) {\r\n            state.counter.value = state.counter.value + action.payload;\r\n        },\r\n        toggleCounter(state) {\r\n            state.showCounter = !state.showCounter;\r\n        }\r\n    }\r\n});\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n//     if(action.type === 'increment') {\r\n//         return {\r\n//             counter: state.counter + 1,\r\n//             showCounter: state.showCounter\r\n//         };\r\n//     }\r\n//     if(action.type === 'increase') {\r\n//         return {\r\n//             counter: state.counter + action.amount,\r\n//             showCounter: state.showCounter\r\n//         };\r\n//     }\r\n\r\n//     if(action.type === 'decrement') {\r\n//         return {\r\n//             counter: state.counter - 1,\r\n//             showCounter: state.showCounter\r\n//         };\r\n//     }\r\n\r\n//     if(action.type === 'toggle'){\r\n//         return {\r\n//             counter: state.counter,\r\n//             showCounter: !state.showCounter,\r\n//         }\r\n//     }\r\n\r\n//     return state;\r\n// };\r\n\r\nconst initialAuthState = {\r\n    isAuth: false\r\n}\r\nconst authSlice = createSlice({\r\n    name: 'authentication',\r\n    initialState: initialAuthState,\r\n    reducers: {\r\n        login(state) {\r\n            state.isAuth = true;\r\n        },\r\n        logout(state) {\r\n            state.isAuth = false;\r\n        }\r\n    }\r\n});\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        counter: counterSlice.reducer,\r\n        auth: authSlice.reducer\r\n    }\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport const authActions = authSlice.actions;\r\nexport default store;"],"mappings":"AAAA,SAASA,cAAc,EAAEC,WAAW,QAAU,kBAAkB;AAEhE,MAAMC,mBAAmB,GAAG;EAAEC,KAAK,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAE3D,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,SAAS;EACfJ,mBAAmB;EACnBK,QAAQ,EAAE;IACNC,SAASA,CAACC,KAAK,EAAE;MACbA,KAAK,CAACC,OAAO,CAACP,KAAK,EAAE;IACzB,CAAC;IACDQ,SAASA,CAACF,KAAK,EAAE;MACbA,KAAK,CAACC,OAAO,CAACP,KAAK,EAAE;IACzB,CAAC;IACDS,QAAQA,CAACH,KAAK,EAAEI,MAAM,EAAE;MACpBJ,KAAK,CAACC,OAAO,CAACP,KAAK,GAAGM,KAAK,CAACC,OAAO,CAACP,KAAK,GAAGU,MAAM,CAACC,OAAO;IAC9D,CAAC;IACDC,aAAaA,CAACN,KAAK,EAAE;MACjBA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IAC1C;EACJ;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAMY,gBAAgB,GAAG;EACrBC,MAAM,EAAE;AACZ,CAAC;AACD,MAAMC,SAAS,GAAGjB,WAAW,CAAC;EAC1BK,IAAI,EAAE,gBAAgB;EACtBa,YAAY,EAAEH,gBAAgB;EAC9BT,QAAQ,EAAE;IACNa,KAAKA,CAACX,KAAK,EAAE;MACTA,KAAK,CAACQ,MAAM,GAAG,IAAI;IACvB,CAAC;IACDI,MAAMA,CAACZ,KAAK,EAAE;MACVA,KAAK,CAACQ,MAAM,GAAG,KAAK;IACxB;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMK,KAAK,GAAGtB,cAAc,CAAC;EACzBuB,OAAO,EAAE;IACLb,OAAO,EAAEL,YAAY,CAACkB,OAAO;IAC7BC,IAAI,EAAEN,SAAS,CAACK;EACpB;AACJ,CAAC,CAAC;AAEF,OAAO,MAAME,cAAc,GAAGpB,YAAY,CAACqB,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGT,SAAS,CAACQ,OAAO;AAC5C,eAAeJ,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}